{"ast":null,"code":"// Actions\nconst ADD_USER_NAME = \"comment/ADD_USER_NAME\";\nconst ADD_USER_MESSAGE = \"comment/ADD_USER_MESSAGE\";\nconst IS_LOADED = \"comment/IS_LOADED\";\nconst initialState = {\n  user_name: \"\",\n  user_score: \"\",\n  is_loaded: false\n};\nexport const addUserName = user_name => {\n  return {\n    type: ADD_USER_NAME,\n    user_name\n  };\n};\nexport const addUserMessage = user_message => {\n  return {\n    type: ADD_USER_MESSAGE,\n    user_message\n  };\n};\nexport const isLoaded = loaded => {\n  return {\n    type: IS_LOADED,\n    loaded\n  };\n}; //Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case \"rank/ADD_USER_NAME\":\n      {\n        return { ...state,\n          user_name: action.user_name\n        };\n      }\n\n    case \"comment/ADD_USER_MESSAGE\":\n      {\n        return { ...state,\n          user_message: action.user_message\n        };\n      }\n\n    case \"comment/ADD_RANK\":\n      {\n        return { ...state,\n          comment: [...state.comment, action.comment_info]\n        };\n      }\n\n    case \"comment/GET_RANK\":\n      {\n        let comment_data = [...state.comment];\n        const comment_ids = state.comment.map((r, idx) => {\n          return r.id;\n        });\n        console.log(comment_ids);\n        console.log(comment_data);\n        return { ...state,\n          comment: comment_data\n        };\n      }\n\n    case \"comment/IS_LOADED\":\n      {\n        return { ...state,\n          is_loaded: action.loaded\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SM-PC/GDproject/character_test/src/redux/modules/comment.js"],"names":["ADD_USER_NAME","ADD_USER_MESSAGE","IS_LOADED","initialState","user_name","user_score","is_loaded","addUserName","type","addUserMessage","user_message","isLoaded","loaded","reducer","state","action","comment","comment_info","comment_data","comment_ids","map","r","idx","id","console","log"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAG,uBAAtB;AACA,MAAMC,gBAAgB,GAAG,0BAAzB;AAEA,MAAMC,SAAS,GAAG,mBAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;AAMA,OAAO,MAAMC,WAAW,GAAIH,SAAD,IAAe;AACtC,SAAO;AAAEI,IAAAA,IAAI,EAAER,aAAR;AAAuBI,IAAAA;AAAvB,GAAP;AACH,CAFM;AAIP,OAAO,MAAMK,cAAc,GAAIC,YAAD,IAAkB;AAC5C,SAAO;AAAEF,IAAAA,IAAI,EAAEP,gBAAR;AAA0BS,IAAAA;AAA1B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAChC,SAAO;AAAEJ,IAAAA,IAAI,EAAEN,SAAR;AAAmBU,IAAAA;AAAnB,GAAP;AACH,CAFM,C,CAIP;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGX,YAAzB,EAAuCY,MAAM,GAAG,EAAhD,EAAoD;AAC/D,UAAQA,MAAM,CAACP,IAAf;AACI,SAAK,oBAAL;AAA2B;AACvB,eAAO,EAAE,GAAGM,KAAL;AAAYV,UAAAA,SAAS,EAAEW,MAAM,CAACX;AAA9B,SAAP;AACH;;AAED,SAAK,0BAAL;AAAiC;AAC7B,eAAO,EAAE,GAAGU,KAAL;AAAYJ,UAAAA,YAAY,EAAEK,MAAM,CAACL;AAAjC,SAAP;AACH;;AAED,SAAK,kBAAL;AAAyB;AACrB,eAAO,EAAE,GAAGI,KAAL;AAAYE,UAAAA,OAAO,EAAE,CAAC,GAAGF,KAAK,CAACE,OAAV,EAAmBD,MAAM,CAACE,YAA1B;AAArB,SAAP;AACH;;AAED,SAAK,kBAAL;AAAyB;AACrB,YAAIC,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAACE,OAAV,CAAnB;AAEA,cAAMG,WAAW,GAAGL,KAAK,CAACE,OAAN,CAAcI,GAAd,CAAkB,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC9C,iBAAOD,CAAC,CAACE,EAAT;AACH,SAFmB,CAApB;AAIAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAEA,eAAO,EAAE,GAAGJ,KAAL;AAAYE,UAAAA,OAAO,EAAEE;AAArB,SAAP;AACH;;AAED,SAAK,mBAAL;AAA0B;AACtB,eAAO,EAAE,GAAGJ,KAAL;AAAYR,UAAAA,SAAS,EAAES,MAAM,CAACH;AAA9B,SAAP;AACH;;AAED;AACI,aAAOE,KAAP;AA/BR;AAiCH","sourcesContent":["// Actions\r\nconst ADD_USER_NAME = \"comment/ADD_USER_NAME\";\r\nconst ADD_USER_MESSAGE = \"comment/ADD_USER_MESSAGE\";\r\n\r\nconst IS_LOADED = \"comment/IS_LOADED\";\r\n\r\nconst initialState = {\r\n    user_name: \"\",\r\n    user_score: \"\",\r\n    is_loaded: false,\r\n};\r\n\r\nexport const addUserName = (user_name) => {\r\n    return { type: ADD_USER_NAME, user_name };\r\n};\r\n\r\nexport const addUserMessage = (user_message) => {\r\n    return { type: ADD_USER_MESSAGE, user_message };\r\n};\r\n\r\nexport const isLoaded = (loaded) => {\r\n    return { type: IS_LOADED, loaded };\r\n};\r\n\r\n//Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case \"rank/ADD_USER_NAME\": {\r\n            return { ...state, user_name: action.user_name };\r\n        }\r\n\r\n        case \"comment/ADD_USER_MESSAGE\": {\r\n            return { ...state, user_message: action.user_message };\r\n        }\r\n\r\n        case \"comment/ADD_RANK\": {\r\n            return { ...state, comment: [...state.comment, action.comment_info] };\r\n        }\r\n\r\n        case \"comment/GET_RANK\": {\r\n            let comment_data = [...state.comment];\r\n\r\n            const comment_ids = state.comment.map((r, idx) => {\r\n                return r.id;\r\n            });\r\n\r\n            console.log(comment_ids);\r\n            console.log(comment_data);\r\n\r\n            return { ...state, comment: comment_data };\r\n        }\r\n\r\n        case \"comment/IS_LOADED\": {\r\n            return { ...state, is_loaded: action.loaded };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}