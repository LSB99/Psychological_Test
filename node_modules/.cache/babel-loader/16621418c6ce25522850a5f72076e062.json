{"ast":null,"code":"// Actions\nconst ADD_USER_NAME = \"comment/ADD_USER_NAME\";\nconst ADD_USER_MESSAGE = \"comment/ADD_USER_MESSAGE\";\nconst IS_LOADED = \"comment/IS_LOADED\";\nconst initialState = {\n  user_name: \"\",\n  user_score: \"\",\n  is_loadad: false\n};\nexport const addUserName = user_name => {\n  return {\n    type: ADD_USER_NAME,\n    user_name\n  };\n};\nexport const addUserMessage = user_message => {\n  return {\n    type: ADD_USER_MESSAGE,\n    user_message\n  };\n};\nexport const isLoaded = loaded => {\n  return {\n    type: IS_LOADED,\n    loaded\n  };\n};\nexport const addCommentFB = comment_info => {\n  return function (dispatch) {\n    dispatch(isLoaded(false));\n    let comment_data = {\n      message: comment_info.message,\n      name: comment_info.name,\n      score: comment_info.score\n    };\n    comment_db.add(comment_data).then(doc => {\n      console.log(doc.id);\n      comment_data = { ...comment_data,\n        id: doc.id,\n        current: true\n      };\n      dispatch(addComment(comment_data));\n    });\n  };\n};\nexport const getCommentFB = () => {\n  return function (dispatch) {\n    dispatch(isLoaded(false));\n    comment_db.get().then(docs => {\n      let comment_data = [];\n      docs.forEach(doc => {\n        console.log(doc.data());\n        comment_data = [...comment_data, {\n          id: doc.id,\n          ...doc.data()\n        }];\n      });\n      dispatch(getComment(comment_data));\n      dispatch(isLoaded(true));\n    });\n  };\n}; //Reducer\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case \"rank/ADD_USER_NAME\":\n      {\n        return { ...state,\n          user_name: action.user_name\n        };\n      }\n\n    case \"comment/ADD_USER_MESSAGE\":\n      {\n        return { ...state,\n          user_message: action.user_message\n        };\n      }\n\n    case \"comment/ADD_RANK\":\n      {\n        return { ...state,\n          comment: [...state.comment, action.comment_info]\n        };\n      }\n\n    case \"comment/GET_RANK\":\n      {\n        let comment_data = [...state.comment];\n        const comment_ids = state.comment.map((r, idx) => {\n          return r.id;\n        });\n        console.log(comment_ids);\n        const comment_data_fb = action.comment_list.filter((r, idx) => {\n          if (comment_ids.indexOf(r.id) === -1) {\n            comment_data = [...comment_data, r];\n          }\n        });\n        console.log(comment_data);\n        return { ...state,\n          comment: comment_data\n        };\n      }\n\n    case \"comment/IS_LOADED\":\n      {\n        return { ...state,\n          is_loaded: action.loaded\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SM-PC/GDproject/character_test/src/redux/modules/comment.js"],"names":["ADD_USER_NAME","ADD_USER_MESSAGE","IS_LOADED","initialState","user_name","user_score","is_loadad","addUserName","type","addUserMessage","user_message","isLoaded","loaded","addCommentFB","comment_info","dispatch","comment_data","message","name","score","comment_db","add","then","doc","console","log","id","current","addComment","getCommentFB","get","docs","forEach","data","getComment","reducer","state","action","comment","comment_ids","map","r","idx","comment_data_fb","comment_list","filter","indexOf","is_loaded"],"mappings":"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","sourcesContent":["// Actions\r\nconst ADD_USER_NAME = \"comment/ADD_USER_NAME\";\r\nconst ADD_USER_MESSAGE = \"comment/ADD_USER_MESSAGE\";\r\n\r\nconst IS_LOADED = \"comment/IS_LOADED\";\r\n\r\nconst initialState = {\r\n    user_name: \"\",\r\n    user_score: \"\",\r\n    is_loadad: false,\r\n};\r\n\r\nexport const addUserName = (user_name) => {\r\n    return { type: ADD_USER_NAME, user_name };\r\n};\r\n\r\nexport const addUserMessage = (user_message) => {\r\n    return { type: ADD_USER_MESSAGE, user_message };\r\n};\r\n\r\nexport const isLoaded = (loaded) => {\r\n    return { type: IS_LOADED, loaded };\r\n};\r\n\r\nexport const addCommentFB = (comment_info) => {\r\n    return function (dispatch) {\r\n        dispatch(isLoaded(false));\r\n\r\n        let comment_data = {\r\n            message: comment_info.message,\r\n            name: comment_info.name,\r\n            score: comment_info.score,\r\n        };\r\n        comment_db.add(comment_data).then((doc) => {\r\n            console.log(doc.id);\r\n            comment_data = { ...comment_data, id: doc.id, current: true };\r\n            dispatch(addComment(comment_data));\r\n        });\r\n    };\r\n};\r\n\r\nexport const getCommentFB = () => {\r\n    return function (dispatch) {\r\n        dispatch(isLoaded(false));\r\n\r\n        comment_db.get().then((docs) => {\r\n            let comment_data = [];\r\n\r\n            docs.forEach((doc) => {\r\n                console.log(doc.data());\r\n\r\n                comment_data = [...comment_data, { id: doc.id, ...doc.data() }];\r\n            });\r\n\r\n            dispatch(getComment(comment_data));\r\n            dispatch(isLoaded(true));\r\n        });\r\n    };\r\n};\r\n\r\n//Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case \"rank/ADD_USER_NAME\": {\r\n            return { ...state, user_name: action.user_name };\r\n        }\r\n\r\n        case \"comment/ADD_USER_MESSAGE\": {\r\n            return { ...state, user_message: action.user_message };\r\n        }\r\n\r\n        case \"comment/ADD_RANK\": {\r\n            return { ...state, comment: [...state.comment, action.comment_info] };\r\n        }\r\n\r\n        case \"comment/GET_RANK\": {\r\n            let comment_data = [...state.comment];\r\n\r\n            const comment_ids = state.comment.map((r, idx) => {\r\n                return r.id;\r\n            });\r\n\r\n            console.log(comment_ids);\r\n\r\n            const comment_data_fb = action.comment_list.filter((r, idx) => {\r\n                if (comment_ids.indexOf(r.id) === -1) {\r\n                   comment_data = [...comment_data, r];\r\n                }\r\n            });\r\n\r\n            console.log(comment_data);\r\n\r\n            return { ...state, comment: comment_data };\r\n        }\r\n\r\n        case \"comment/IS_LOADED\": {\r\n            return { ...state, is_loaded: action.loaded };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}